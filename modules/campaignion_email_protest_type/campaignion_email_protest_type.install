<?php

/**
 * @file
 * Update hooks for the email protest feature.
 */

/**
 * Delete node type.
 */
function campaignion_email_protest_type_update_3() {
  node_type_delete('email_protest');
}

/**
 * Turn all email protest nodes into flexible forms.
 */
function campaignion_email_protest_type_update_2() {
  // Migrate field values.
  $params['entity_type'] = 'node';
  $params['bundle'] = 'email_protest';
  foreach (field_read_instances($params) as $instance) {
    $field_name = $instance['field_name'];
    db_update("field_data_{$field_name}")
      ->fields(['bundle' => 'webform'])
      ->condition('bundle', 'email_protest')
      ->execute();
    db_update("field_revision_{$field_name}")
      ->fields(['bundle' => 'webform'])
      ->condition('bundle', 'email_protest')
      ->execute();
  }
  // Migrate nodes.
  db_update('node')
    ->fields(['type' => 'webform'])
    ->condition('type', 'email_protest')
    ->execute();
}

/**
 * Remove all field instances from email protests that canâ€™t be migrated.
 */
function campaignion_email_protest_type_update_1() {
  $params['entity_type'] = 'node';
  $params['bundle'] = ['email_protest', 'webform'];
  $instances = [];
  foreach (field_read_instances($params) as $instance) {
    $instances[$instance['bundle']][$instance['field_name']] = $instance;
  }
  foreach ($instances['email_protest'] as $field_name => $instance) {
    if (!isset($instances['webform'][$field_name])) {
      field_delete_instance($instance);
    }
  }
}
